

多任务：
1.时间片轮转轮流交替执行
2.并行：真的多任务（多核cpu）
3.并发：任务数>cpu核心数，假的多任务

线程
thread 比较底层的模块
threading 对thread做了一些包装

主线程等待子线程执行结束

enumerate() 把可迭代对象拆包成元组

创建线程，传递指导参数
共享全局变量，资源竞争

同步概念，互斥解锁解决资源竞争的问题
同步：就是协同步调，按预定的先后顺序次序执行
互斥锁：当多个线程几乎同时修改一个共享数据的时候，需要进行同步控制
原子性：要么不做，要么一次性做完

在多资源情况下等待的一种状态：
死锁：在线程在共享多个资源时，如果两个线程分别占用一部分资源并同时
等待对方的资源，就会造成死锁

避免死锁
1.银行家算法
2.添加超时时间

进程：程序运行时，代码+用到的资源，操作系统分配的基本资源

操作系统调度算法：
时间片轮转
优先级调度

进程的状态：就绪，运行，等待（堵塞）

vi V ：normal i # 添加注释
ctrl shift t 在终端开新标签
ps
ps -aux
进程要为多个目标服务？

子进程，一个进程里至少有一个主线程
写时拷贝,进程间相互独立

线程资源共享，进程间资源？
进程间通信（Queue） 同一电脑同一程序的多进程

栈： 先进后出
队列：先进先出

如果要执行的进程数目更多，手动创建损坏时间？
进程池Pool
指定一个最大进程数，当有新进程提交时，如果进程池没满，就创建进程执行请求，
达到最大值，请求就等待，直到有空闲进程，可重复利用
创建，销毁过程损耗资源大
